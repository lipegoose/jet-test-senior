version: "3.8"

services:
  db:
    image: postgres:15
    container_name: jet_db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: messages_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: jet_rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672" # Interface web do RabbitMQ
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  redis:
    image: redis:7
    container_name: jet_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: jet_backend
    restart: always
    depends_on:
      - db
      - rabbitmq
      - redis
    environment:
      DATABASE_URL: postgres://user:password@db:5432/messages_db
      RABBITMQ_URL: amqp://user:password@rabbitmq
      REDIS_URL: redis://redis:6379
      PORT: 3000
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
    command: ["npm", "start"]

  consumer:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: jet_whatsapp_consumer
    restart: always
    depends_on:
      - db
      - rabbitmq
      - redis
    environment:
      DATABASE_URL: postgres://user:password@db:5432/messages_db
      RABBITMQ_URL: amqp://user:password@rabbitmq
      REDIS_URL: redis://redis:6379
      PORT: 3000
    volumes:
      - ./backend:/app
    command: ["npm", "run", "consumer"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: jet_frontend
    restart: always
    ports:
      - "8080:80"   # Mapeia a porta 80 do container para 8080 no host
    depends_on:
      - backend
    volumes:
      - ./frontend:/app

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data: